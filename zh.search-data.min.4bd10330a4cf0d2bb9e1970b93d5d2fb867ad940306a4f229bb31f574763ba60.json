[{"id":0,"href":"/docs/%E7%AC%94%E8%AE%B0%E6%9C%AC/win11-ltsc/%E5%AE%89%E8%A3%85%E7%B3%BB%E7%BB%9F/","title":"安装系统","section":"windows 11","content":" 系统安装 # 推荐使用LTSC,专业版需登录账号才能完成安装 "},{"id":1,"href":"/docs/%E7%AC%94%E8%AE%B0%E6%9C%AC/win11-ltsc/%E7%B3%BB%E7%BB%9F%E4%BC%98%E5%8C%96/","title":"系统优化","section":"windows 11","content":" 系统优化 # "},{"id":2,"href":"/posts/2024-11-11/","title":"影视资源","section":"日记本","content":" 种子下载 # 获取元文件 https://webtor.io/ 元数据编辑64位 https://torrent-file-editor.github.io/ 旧BE，需要到谷歌网盘下载 https://sites.google.com/site/ultimasites/files 四人拼接结果 ed2k://|file|4ren.mp4|4483035686|AA06C4FFF569C937A81E51F8023F8FFA|/ 能下载\nBT编辑器 # apt install aria2\rhttps://github.com/torrent-file-editor/torrent-file-editor/releases/download/v1.0.0/torrent-file-editor-1.0.0-x64.exe 浆果儿 # magnet:?xt=urn:btih:9d6f242a44d2cf99ec89b6ed8b43663f11748495\u0026amp;dn=%E6%B5%86%E6%9E%9C%E5%84%BF 岳欣月 # magnet:?xt=urn:btih:e9aa39b943b7f90e6be196f580faa6397ad07a1d\u0026amp;dn=%E3%80%90%E9%9C%87%E6%83%8A%E2%9D%A4%EF%B8%8F%E7%BD%91%E6%9B%9D%E7%83%AD%E9%97%A8%E4%BA%8B%E4%BB%B6%E3%80%91%E8%B6%85%E7%81%AB%E7%88%86%E5%90%89%E6%9E%97%E5%A5%B3%E5%AD%A9%E5%B2%B3%E6%AC%A3%E6%9C%88%E5%A4%9A%E4%BA%BA%E8%BF%90%E5%8A%A8%E4%B8%8D%E9%9B%85%E7%A7%81%E6%8B%8D%E6%B5%81%E5%87%BA%20%E7%96%AF%E7%8B%8210P%E4%B9%B1%E6%93%8D%20%E5%9B%BD%E4%BA%A7%E5%A4%A7%E4%B9%B1%E4%BA%A4%20%E5%A0%AA%E6%AF%94AV%20%E9%AB%98%E6%B8%85720P%E5%AE%8C%E6%95%B4%E7%89%88\u0026amp;tr=http%3A%2F%2Fsukebei.tracker.wf%3A8888%2Fannounce\u0026amp;tr=udp%3A%2F%2Fopen.stealth.si%3A80%2Fannounce\u0026amp;tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337%2Fannounce\u0026amp;tr=udp%3A%2F%2Fexodus.desync.com%3A6969%2Fannounce\u0026amp;tr=udp%3A%2F%2Ftracker.torrent.eu.org%3A451%2Fannounce 紫色面具 # 其实只有14个不重复文件 magnet:?xt=urn:btih:9299f4be2d5b26f8fe7ab0b17a8c6a7d63af0f84\u0026amp;dn=%E7%B4%AB%E8%89%B2%E9%9D%A2%E5%85%B7\r4b0931f2a5a1bcd10b9a06afeea96f5c 3.mp4\re57de350277cc8086f300244689749be 5.mp4\r0f74b1f26b6421e4a1786088ae142267 9.mp4\re16f7b311aa849c7b5432d66da76f958 紫色面具 (10).mp4\r51eab4935abaa1c9b55ab3bf82a73110 紫色面具 (11).mp4\rdf88b75692efd9d308f03c020f0f15ba 紫色面具 (1).mp4\rd5e49d4c7354463487986cafaeada2dd 紫色面具 (2).mp4\rb195c894cc439b130f9585c0e87b872e 紫色面具 (3).mp4\r8168b209befaeafde0bf9164da67323d 紫色面具 (4).mp4\r76444c6eeef02580b3c7a313a18b8650 紫色面具 (5).mp4\r794c96907cf245d27b8d9a2075b73351 紫色面具 (6).mp4\r3b974835a30635e90de3ec3b589a9456 紫色面具 (7).mp4\r5950f2f2b6be317e42a1b00fe34fb19f 紫色面具 (8).mp4\rbc05491e17a35a7b739363459b8ad8b6 紫色面具 (9).mp4 "},{"id":3,"href":"/posts/2024-11-03/","title":"Faker第五冠,为了所有支持者!","section":"日记本","content":" 恭喜Faker第五冠！ # 2024全球总局赛视频 # 第一局 # 第二局 # 第三局 # 第四局 # 第五局 # "},{"id":4,"href":"/posts/2024-07-08/","title":"沙特石油杯EWC,成就双底座赛区的荣光!","section":"日记本","content":" 总决赛(第二底座) # 第一局 # 第二局 # 第三局 # 第四局 # 1/4决赛(第一底座) # 第一局 # 第二局 # 第三局 # "},{"id":5,"href":"/posts/2023-11-19/","title":"Faker第四冠,为了队友!","section":"日记本","content":" 2023全球总决赛 # 第一局 # 第二局 # 第三局 # "},{"id":6,"href":"/posts/2023-09-29/","title":"四金一铜,英雄联盟!","section":"日记本","content":" 2022杭州亚运冠军集体照！ # 亚运总决赛视频 # 第一局:韩国1-0中华台湾 # 第二局:韩国2-0中华台湾,我们是冠军! # 亚运半决赛 # 第一局 韩国1-0中国 # 第二局 韩国2-0中国 # 季军争夺战！ # 第一局:越南1-0中国 # 第二局: 越南1-1中国 # 第三局:越南1-2中国,我们是季军！ # "},{"id":7,"href":"/docs/%E6%9C%8D%E5%8A%A1%E5%99%A8/debian/%E5%AE%89%E8%A3%85%E7%B3%BB%E7%BB%9F/","title":"安装系统","section":"debian","content":" 服务器安装 # 清华镜像下载 软碟通 王涛 7C81-1689-4046-626F 只要下载4G左右的,1G以下是网络安装版,7G以上是教育版(内置的软件不同) 命令查找 "},{"id":8,"href":"/docs/%E6%9C%8D%E5%8A%A1%E5%99%A8/debian/%E5%AE%B9%E5%99%A8%E7%9B%B8%E5%85%B3/%E4%BB%A3%E7%90%86%E4%BD%BF%E7%94%A8/","title":"代理使用","section":"容器相关","content":" 代理使用 # Docker配置代理 # /etc/systemd/system/docker.service.d [Service] Environment=\u0026#34;HTTP_PROXY=http://x:x@172.22.43.127:10086\u0026#34; Environment=\u0026#34;HTTPS_PROXY=http://x:x@172.22.43.127:10086\u0026#34; Environment=\u0026#34;NO_PROXY=localhost,127.0.0.1,.cn\u0026#34; 重启服务 # sudo systemctl daemon-reload sudo systemctl restart docker "},{"id":9,"href":"/docs/%E6%9C%8D%E5%8A%A1%E5%99%A8/debian/%E5%AE%B9%E5%99%A8%E7%9B%B8%E5%85%B3/%E5%AE%B9%E5%99%A8%E8%B5%84%E6%96%99/","title":"容器资料","section":"容器相关","content":" Docker相关 # "},{"id":10,"href":"/docs/%E7%AC%94%E8%AE%B0%E6%9C%AC/win11-ltsc/%E6%89%A9%E5%B1%95%E5%91%BD%E4%BB%A4/","title":"扩展命令","section":"windows 11","content":" 扩展命令 # powershell虽然好用,但是命令与Linux差别巨大 wget hugo "},{"id":11,"href":"/docs/%E7%AC%94%E8%AE%B0%E6%9C%AC/win11-ltsc/%E8%99%8E%E7%89%99%E6%8E%A8%E6%B5%81/","title":"虎牙推流","section":"windows 11","content":" 虎牙推流 # 虎牙直播 # -re (input) 以本机帧速率读取输入。这相当于设置-readrate 1。 -stream_loop number (input) 设置输入流应循环的次数。Loop 0表示无循环，loop-1表示无限循环。 -codec[:stream_specifier] codec (input/output,per-stream)为一个或多个流选择编码器（当在输出文件之前使用时）或解码器（当在输入文件之前使用时）。codec是解码器/编码器的名称或特殊值copy（仅输出），指示流不被重新编码。 -c: copy 表示所有流格式都是复制 nohup ffmpeg -re -stream_loop -1 -i bbb.mp4 -c: copy -f flv \u0026#34;rtmp://al.direct.huya.com/huyalive/1787660552-1787660552-7438266878141176820-3575444560-10057-A-1731860186-1?seq=1731856465590\u0026amp;type=simple\u0026#34; \u0026amp; 最快的剪辑视频 # ffmpeg -ss 1:25 -i 3.2_CG16_2_mux.mp4 -c: copy bbb.mp4 "},{"id":12,"href":"/docs/%E7%AC%94%E8%AE%B0%E6%9C%AC/win11-ltsc/%E8%B5%84%E6%BA%90%E4%B8%8B%E8%BD%BD/","title":"资源下载","section":"windows 11","content":" 资源下载 # win11x64\n开发软件 # webstorm(非商业免费) idea goland "},{"id":13,"href":"/docs/%E7%AC%94%E8%AE%B0%E6%9C%AC/linux/%E7%B3%BB%E7%BB%9F%E6%8E%A8%E8%8D%90/","title":"系统推荐","section":"笔记本","content":" 系统推荐 # Cinnamon是debian官方维护的桌面系统，是debian中的一个桌面，个人感觉比较好看\n使用默认安装即可\n"},{"id":14,"href":"/docs/%E5%85%B6%E4%BB%96%E8%AE%BE%E5%A4%87/%E6%97%A7%E7%89%88%E7%B3%BB%E7%BB%9F/","title":"旧版系统","section":"Docs","content":" 旧版系统 # win 10 ltsc # 下载 ed2k://|file|LTSC_2021_X64.ISO|5044211712|1555B7DCA052B5958EE68DB58A42408D|/\nwin 7 # 专业版VL\n旗舰版下载 ed2k://|file|windows_7_ultimate_x64.iso|3419052032|56E90251E665E643C81168F6DD870BCB|/ win7旗舰版不能用kms激活。\nU盘使用USB-HDD chrome浏览器 QQ拼音输入法 slmgr /skms kms.03k.org slmgr /ato ## 4G内存+关闭动态 ## xp mstsc /v 172.28.146.241 ftp://10.0.0.64:2121 "},{"id":15,"href":"/docs/%E5%85%B6%E4%BB%96%E8%AE%BE%E5%A4%87/%E8%AE%BE%E5%A4%87%E8%B5%84%E6%96%99/","title":"设备资料","section":"Docs","content":" 设备资料 # 台式机 # 三星 DM-Z250 win7x64英特尔驱动 win7x64网卡驱动 ESC 选择启动盘 F2 进入BIOS\n笔记本 # 8852ae驱动 "},{"id":16,"href":"/docs/%E4%BB%A3%E7%A0%81%E5%BA%93/%E4%B8%BB%E9%A2%98%E6%95%99%E7%A8%8B/","title":"主题教程","section":"代码库","content":" 主题教程 # 短码使用 # content\\docs*.md中引用 {{\u0026lt; video src=\u0026#34;/1.mp4\u0026#34; \u0026gt;}}{{\u0026lt; /video \u0026gt;}} 在短码中配置(layouts/shortcodes/video.html) \u0026lt;video controls width=\u0026#34;100%\u0026#34;\u0026gt; \u0026lt;source {{ with .Get \u0026#34;src\u0026#34; }} src=\u0026#34;{{.}}\u0026#34; {{ end }} type=\u0026#34;video/mp4\u0026#34; /\u0026gt; {{ .Inner }} \u0026lt;/video\u0026gt; 图片相对文件位置 # ./post/1111-11-11.md引用当前目录下1.jpg编译后路径为./post/1111-11-11/1.jpg ./post/1111-11-11/index.md引用当前目录下1.jpg编译后路径为./post/1111-11-11/1.jpg ./post/1111-11-11/_index.md为子节点不要写文章,叶子节点的为index.md "},{"id":17,"href":"/docs/%E4%BB%A3%E7%A0%81%E5%BA%93/%E5%89%8D%E7%AB%AF%E8%B5%84%E6%BA%90/","title":"前端资源","section":"代码库","content":" 前端资料 # WebStorm # 下载地址 https://www.jetbrains.com/webstorm/download/other.html\nBootstrap5.3 # 首页 https://getbootstrap.com/\n源码+示例 https://github.com/twbs/bootstrap/releases\nVue # https://cn.vuejs.org/\n网络问题先执行以下 npm config set registry https://registry.npmmirror.com "},{"id":18,"href":"/docs/%E4%BB%A3%E7%A0%81%E5%BA%93/%E6%89%A7%E8%A1%8C%E8%84%9A%E6%9C%AC/","title":"执行脚本","section":"代码库","content":" 服务器常用脚本 # 参考资料 https://github.com/fengyuhetao/shell\n常用定时器 # 自动休眠 清楚内存 更新容器内的git项目 */10 * * * * /usr/powersave.sh\r*/10 * * * * echo 3 \u0026gt; /proc/sys/vm/drop_caches\r0 */2 * * * docker exec zian updategit powersave.sh # #!/bin/bash\rlogintime=`last docker --time-format iso | head -n1 | awk \u0026#39;{print $6}\u0026#39;`\r#logintime=\u0026#34;2024-09-11T07:18:18+08:00\u0026#34;\rif [ ${#logintime} -eq 6 ];then\recho \u0026#34;555\u0026#34; \u0026gt;\u0026gt; 555.log\relse\rlogintime=`date -d $logintime +%s`\rlogintime=$(expr $logintime)\rnow=$(expr `date +%s`)\rnow=$(expr $now - $logintime)\rif [ $now -gt 7200 ] ;then\rsystemctl suspend\rfi\rfi updategit # #!/bin/bash\rcd /var/www/\rcommand -v unzip \u0026gt;/dev/null 2\u0026gt;\u0026amp;1 || apt install -y unzip\rwget github.com/zi-an/zi-an.github.io/archive/refs/heads/master.zip\runzip -o master.zip\rrm master.zip kaibo.sh # #!/bin/bash\rcommand -v ffmpeg \u0026gt;/dev/null 2\u0026gt;\u0026amp;1 || apt install -y ffmpeg\rnohup ffmpeg -re -stream_loop -1 -i bbb.mp4 -c: copy -f flv \u0026#34;$1\u0026#34; \u0026amp; alias # alias zian=\u0026#34;docker exec -it zian bash\u0026#34;\ralias xunlei=\u0026#34;docker exec -it xunlei bash\u0026#34;\ralias maomiav=\u0026#34;docker exec -it maomiav bash\u0026#34;\ralias dockerps=\u0026#34;docker ps -a --format \u0026#39;table {{.Names}}\\t{{.Status}}\u0026#39;\u0026#34; "},{"id":19,"href":"/docs/%E4%BB%A3%E7%A0%81%E5%BA%93/%E4%BB%A3%E7%A0%81%E7%BC%96%E8%AF%91/","title":"代码编译","section":"代码库","content":" 代码编译 # main.go # go build main.go package main\rimport (\r\u0026#34;fmt\u0026#34;\r\u0026#34;io\u0026#34;\r\u0026#34;net/http\u0026#34;\r\u0026#34;net/url\u0026#34;\r\u0026#34;os\u0026#34;\r\u0026#34;os/exec\u0026#34;\r\u0026#34;strings\u0026#34;\r\u0026#34;time\u0026#34;\r)\rfunc main() {\rInit()\rserver := \u0026amp;http.Server{\rAddr: \u0026#34;0.0.0.0:8888\u0026#34;,\r}\rmux := http.NewServeMux()\rmux.HandleFunc(\u0026#34;/get\u0026#34;, get)\rmux.HandleFunc(\u0026#34;/post\u0026#34;, post)\rmux.HandleFunc(\u0026#34;/m3u8er\u0026#34;, m3u8er)\rmux.HandleFunc(\u0026#34;/noter\u0026#34;, noter)\rserver.Handler = mux\r_ = server.ListenAndServe()\r}\rfunc Init() {\rdirs := []string{\u0026#34;/home/nginx/m3u8/\u0026#34;, \u0026#34;/home/nginx/note/\u0026#34;}\rfor _, dir := range dirs {\r_, err := os.Stat(dir)\rif err == nil {\r_ = os.MkdirAll(dir, 0777)\r}\r}\r}\r// 获取客户端信息\rfunc get(w http.ResponseWriter, r *http.Request) {\rwrite := \u0026#34;ip:\u0026#34; + r.Header.Get(\u0026#34;X-Real-IP\u0026#34;) + \u0026#34;\\n\u0026#34;\rfor k, v := range r.Header {\rwrite = write + k + \u0026#34;:\u0026#34; + strings.Join(v, \u0026#34;;\u0026#34;) + \u0026#34;\\n\u0026#34;\r}\r_, _ = w.Write([]byte(write))\r}\r// 文件上传\r// 测试数据: curl http://127.0.0.1:8888/post -F file=@bank.jpg -H \u0026#34;Referer: http://127.0.0.1/?from=/upload/\u0026#34;\rfunc post(w http.ResponseWriter, r *http.Request) {\rfrom := r.Header.Get(\u0026#34;Referer\u0026#34;)\rfrom = from[strings.Index(from, \u0026#34;=/\u0026#34;)+1 : len(from)] //获取相对地址\rswitch r.Method {\rcase \u0026#34;GET\u0026#34;:\r_, _ = w.Write([]byte(string(\u0026#34;method is GET\u0026#34;)))\rcase \u0026#34;POST\u0026#34;:\r_ = r.ParseForm()\rimgFile, _, _ := r.FormFile(\u0026#34;file\u0026#34;) //获取文件内容\rdefer imgFile.Close()\rfiles := r.MultipartForm.File //获取表单中的信息\rimgName := files[\u0026#34;file\u0026#34;][0].Filename //获取表单文件中name为file的数据\rimgName = \u0026#34;.\u0026#34; + from + imgName\r_, err := os.Stat(imgName) //判断文件是否存在,在则隐藏并添加时间戳\rif err == nil {\rloc, _ := time.LoadLocation(\u0026#34;Asia/Taipei\u0026#34;)\rnewName := \u0026#34;.\u0026#34; + from + \u0026#34;.\u0026#34; + files[\u0026#34;file\u0026#34;][0].Filename + \u0026#34;.\u0026#34; + time.Now().In(loc).Format(\u0026#34;20060102_150405\u0026#34;)\r_ = os.Rename(imgName, newName)\r}\rsaveFile, _ := os.Create(imgName)\r_ = saveFile.Close()\r_, _ = io.Copy(saveFile, imgFile) //保存\rhttp.Redirect(w, r, \u0026#34;/?from=\u0026#34;+from, http.StatusSeeOther)\rdefault:\rfmt.Print(\u0026#34;error method\u0026#34;)\r}\r}\r// m3u8下载\rfunc m3u8er(w http.ResponseWriter, r *http.Request) {\ruri := r.PostFormValue(\u0026#34;uri\u0026#34;)\ruri, _ = url.QueryUnescape(uri)\rname := r.PostFormValue(\u0026#34;name\u0026#34;)\rfmt.Println(uri, \u0026#34;:\u0026#34;, name)\r_ = exec.Command(\u0026#34;m3u8downloader\u0026#34;, uri, name).Run()\rhttp.Redirect(w, r, \u0026#34;/?from=/m3u8/\u0026#34;, http.StatusSeeOther)\r}\rfunc noter(w http.ResponseWriter, r *http.Request) {\rnote := r.PostFormValue(\u0026#34;note\u0026#34;)\rfile, _ := os.OpenFile(\u0026#34;/home/nginx/note/note.log\u0026#34;, os.O_RDWR|os.O_CREATE|os.O_APPEND, 0666)\rloc, _ := time.LoadLocation(\u0026#34;Asia/Taipei\u0026#34;)\r_, _ = file.WriteString(time.Now().In(loc).Format(\u0026#34;0102_1504: \u0026#34;) + note + \u0026#34;\\n\u0026#34;)\rhttp.Redirect(w, r, \u0026#34;/?from=/note/\u0026#34;, http.StatusSeeOther)\r} "},{"id":20,"href":"/docs/%E4%BB%A3%E7%A0%81%E5%BA%93/%E5%9C%86%E5%91%A8%E8%AE%A1%E7%AE%97/","title":"圆周计算","section":"代码库","content":" 计算圆周率 # 圆周率查询 https://www.pilookup.com/zh-cn/ 圆周率下载 https://www.pilookup.com/zh-cn/download.html 源代码 https://www.kurims.kyoto-u.ac.jp/~ooura/pi_fft.html 最大ftt值为536870912大约512M内存 使用FFT+AGM代码计算 # apt install gcc make -y\rwget https://www.kurims.kyoto-u.ac.jp/~ooura/pi_fftc6_src.tgz\rtar -zxvf pi_fftc6_src.tgz\rcd pi_fftc6/\rsed -i \u0026#34;s|-fast|-Ofast|g\u0026#34; Makefile_64bit\rsed -i \u0026#39;s|scanf(\u0026#34;%lg\u0026#34;, \u0026amp;x)|x=100000|g\u0026#39; pi_fftcw.c\rmake -f Makefile_64bit\rnohup ./pi_cw \u0026amp;\rcat pi.dat 四行代码求圆周率 # 资料 https://cs.uwaterloo.ca/~alopez-o/math-faq/mathtext/node12.html pi.c如下,执行 * gcc pi.c \u0026amp;\u0026amp; ./a.out * #include \u0026lt;stdio.h\u0026gt;\rint a=10000,b,c=2800,d,e,f[2801],g;\rvoid main(){\rfor(;b-c;)f[b++]=a/5;\rfor(;d=0,g=c*2;c-=14,printf(\u0026#34;%.4d\u0026#34;,e+d/a),e=d%a)for(b=c;d+=f[b]*a,\rf[b]=d%--g,d/=g--,--b;d*=b);} 下载 # wget https://files.pilookup.com/pi/1-100000000.zip\rwget https://files.pilookup.com/pi/100000001-200000000.zip\rwget https://files.pilookup.com/pi/200000001-300000000.zip wget https://files.pilookup.com/pi/300000001-400000000.zip wget https://files.pilookup.com/pi/400000001-500000000.zip wget https://files.pilookup.com/pi/500000001-600000000.zip wget https://files.pilookup.com/pi/600000001-700000000.zip wget https://files.pilookup.com/pi/700000001-800000000.zip wget https://files.pilookup.com/pi/800000001-900000000.zip wget https://files.pilookup.com/pi/900000001-1000000000.zip "}]